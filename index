<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title id="animated-title">ATMOO</title> <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap" rel="stylesheet">
    <style>
        @font-face {
            font-family: 'Angel_wish';
            src: url('Angel_wish.ttf') format('truetype');
        }

        /* --- Benutzerdefinierter Cursor --- */
        .custom-cursor {
            position: fixed;
            width: 40px;
            height: 40px;
            background: url('https://files.catbox.moe/2qeokf.png') no-repeat center center;
            background-size: contain;
            pointer-events: none;
            z-index: 9999;
            transform: translate(-50%, -50%);
            display: none; /* Standardmäßig ausgeblendet, wird von JS gesteuert */
        }

        /* Stellt sicher, dass der Standardcursor auf allen Elementen komplett ausgeblendet ist */
        * {
            cursor: none !important; /* Versteckt den Standardcursor überall */
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Roboto, Arial, sans-serif;
        }

        body {
            margin: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            position: relative;
            background-color: #000;
        }

        /* Hintergrund-Video */
        .background-video {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            z-index: 0;
        }

        /* --- CSS für den TV-Gitter-Effekt --- */
        .tv-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: linear-gradient(0deg, transparent 50%, rgba(0,0,0,.5) 50%),
                              linear-gradient(90deg, transparent 50%, rgba(0,0,0,.5) 50%);
            background-size: 2px 2px;
            pointer-events: none;
            z-index: 1;
            opacity: 0.2;
        }
        /* --- Ende TV-Gitter-Effekt --- */

        /* --- Angepasstes Overlay (Startbildschirm) --- */
        #start-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background: rgba(0, 0, 0, 0.9);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 30;
            cursor: pointer;
            transition: opacity 0.5s ease;
        }

        #start-text {
            font-family: 'Courier New', monospace;
            font-size: 24px;
            color: #fff;
            text-align: center;
            opacity: 0;
            animation: fadeInText 1.5s forwards 0.5s;
        }

        #start-screen.hidden {
            opacity: 0;
            pointer-events: none;
        }

        @keyframes fadeInText {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        /* --- Ende Angepasstes Overlay (Startbildschirm) --- */

        .content {
            position: relative;
            z-index: 5;
            text-align: center;
            color: white;
            max-width: 400px;
            width: 100%;
            display: none;
        }

        .profile-wrapper {
            max-width: 400px;
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
            transform-style: preserve-3d;
            transform: perspective(1000px) rotateX(var(--xv)) rotateY(var(--yv));
            transition: transform 0.1s ease-out;
            will-change: transform;
            z-index: 6;
            position: relative;
            margin: auto;
        }

        :root {
            --xv: 0deg;
            --yv: 0deg;
        }

        .profile-container {
            text-align: center;
            color: white;
            padding: 20px;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 15px;
            max-width: 400px;
            width: 100%;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            z-index: 1;
            min-height: 400px;
            transition: min-height 0.3s ease;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transform: none;
            position: relative;
        }

        .playlist-container {
            text-align: left;
            color: white;
            padding: 10px;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 15px;
            max-width: 400px;
            width: 100%;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            z-index: 1;
            display: flex;
            align-items: center;
            gap: 10px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transform: none;
            position: relative;
        }

        .avatar-container {
            position: relative;
            display: inline-block;
            width: 150px;
            height: 150px;
            border-radius: 50%;
            overflow: hidden;
            margin: 0 auto;
            border: 2px solid rgba(255, 255, 255, 0.2);
        }

        .avatar {
            width: 100%;
            height: 100%;
            object-fit: cover;
            /* animation: spin 7s linear infinite; */
            pointer-events: none;
            user-select: none;
            -webkit-user-drag: none;
        }

        @keyframes spin {
            from {
                transform: rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }

        .username {
            font-family: 'Angel_wish', Arial, sans-serif;
            font-size: 2.5rem;
            margin-top: 20px;
            text-transform: capitalize;
            font-weight: 600;
            position: relative;
            display: block;
        }

        .uid {
            position: absolute;
            top: -25px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(0, 0, 0, 0.6);
            padding: 5px;
            border-radius: 5px;
            font-size: 1rem;
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
            white-space: nowrap;
        }

        .username:hover .uid {
            opacity: 1;
            animation: fadeIn 0.5s ease;
        }

        .badges-container {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 5px;
            margin-bottom: 5px;
            flex-wrap: wrap;
        }

        .badge {
            position: relative;
            display: inline-block;
            width: 40px;
            height: 40px;
            border-radius: 5px;
            transition: transform 0.3s ease;
        }

        .badge-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .badge-name {
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(0, 0, 0, 0.6);
            padding: 5px;
            border-radius: 5px;
            font-size: 1rem;
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            white-space: nowrap;
        }

        .badge:hover .badge-name {
            opacity: 1;
            animation: fadeIn 0.5s ease;
        }

        .badge:hover {
            transform: translateY(-5px);
        }

        .profile-description {
            margin-top: 10px;
            font-size: 1.2rem;
        }

        #typing-text::after {
            content: '|';
            animation: blink 1s infinite;
            margin-left: 2px;
        }

        @keyframes blink {
            0% { opacity: 1; }
            50% { opacity: 0; }
            100% { opacity: 1; }
        }

        .line {
            width: 80%;
            height: 1px;
            background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.3), transparent);
            margin: 20px auto;
        }

        .vertical-line {
            width: 1px;
            height: 30px;
            background: linear-gradient(to bottom, transparent, rgba(255, 255, 255, 0.3), transparent);
        }

        .social-icons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 10px;
        }

        .social-icons .icon {
            width: 40px;
            height: 40px;
            background-color: transparent;
            position: relative;
            transition: transform 0.3s ease;
        }

        .social-icons .icon img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }

        .social-icons .icon:hover img {
            transform: scale(1.1);
        }

        .social-icons .icon:hover {
            transform: translateY(-5px);
        }

        .social-icons .icon .social-name {
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(0, 0, 0, 0.6);
            padding: 5px;
            border-radius: 5px;
            font-size: 1rem;
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            white-space: nowrap;
        }

        .social-icons .icon:hover .social-name {
            opacity: 1;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        /* --- Lautstärke-Controller: Angepasstes FEDERAL.html Design, leicht größer --- */
        .volume-control-container {
            position: fixed;
            top: 20px;
            left: 20px;
            width: 60px; /* Minimal größer */
            height: 60px; /* Minimal größer */
            background: rgba(0, 0, 0, 0.7);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px; /* Angepasst an FEDERAL.html */
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 100;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            overflow: hidden; /* Wichtig für die Slider-Animation */
            opacity: 0; /* Anfangs unsichtbar */
            pointer-events: none; /* Anfangs keine Interaktion */
        }

        .volume-control-container.visible {
            opacity: 1;
            pointer-events: auto;
        }

        .volume-control-container:hover {
            background: rgba(0, 0, 0, 0.9);
            border-color: rgba(255, 255, 255, 0.4);
            width: 250px; /* Angepasste Breite beim Hover (minimal größer) */
            justify-content: flex-start;
            padding-left: 60px; /* Platz für Icon beim Hover, angepasst an größere Breite */
        }

        .volume-control-container:hover .volume-icon-svg {
            margin-left: -48px; /* Verschiebt das Icon beim Hover, angepasst an größere Breite */
        }

        .volume-control-container:hover .volume-slider-inline,
        .volume-control-container:hover .volume-percentage {
            display: flex;
            opacity: 1;
            visibility: visible;
        }

        .volume-icon-svg { /* SVG Icon Styling */
            width: 30px; /* Minimal größer */
            height: 30px; /* Minimal größer */
            fill: rgba(255, 255, 255, 0.8);
            transition: all 0.3s ease;
            flex-shrink: 0;
            position: relative;
        }

        .volume-control-container.muted .volume-icon-svg {
            fill: rgba(255, 100, 100, 0.8); /* Rot bei Mute */
        }

        .volume-slider-inline {
            display: none; /* Anfangs versteckt */
            opacity: 0;
            visibility: hidden;
            width: 140px; /* Hier wurde der Wert leicht verkleinert (von 150px) */
            height: 20px;
            margin: 0 10px;
            transition: all 0.3s ease;
            position: relative;
            align-items: center;
            flex-grow: 1; /* Nimmt verfügbaren Platz ein */
        }

        .volume-slider-inline input[type="range"] {
            width: 100%;
            height: 4px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 2px;
            outline: none;
            -webkit-appearance: none;
            cursor: pointer;
        }

        .volume-slider-inline input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 16px;
            height: 16px;
            background: #ffffff;
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .volume-slider-inline input[type="range"]::-moz-range-thumb {
            width: 16px;
            height: 16px;
            background: #ffffff;
            border-radius: 50%;
            cursor: pointer;
            border: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .volume-percentage {
            display: none; /* Anfangs versteckt */
            opacity: 0;
            visibility: hidden;
            font-size: 0.85rem; /* Minimal größer */
            color: rgba(255, 255, 255, 0.8);
            font-family: 'Courier New', monospace;
            min-width: 35px; /* Minimal breiter für % */
            text-align: center;
            transition: all 0.3s ease;
            margin-right: 8px;
            flex-shrink: 0; /* Verhindert, dass der Text schrumpft */
        }
        /* --- Ende Lautstärke-Controller: Angepasstes FEDERAL.html Design --- */

        .shop-button {
            position: absolute;
            top: 10px;
            right: 10px;
            width: 40px;
            height: 40px;
            background: rgba(0, 0, 0, 0.3);
            border-radius: 50%;
            display: none;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            z-index: 7;
        }

        .shop-button:hover {
            transform: translateY(-3px);
            background: rgba(255, 255, 255, 0.2);
        }

        .shop-button img {
            width: 30px;
            height: 30px;
        }

        .profile-views {
            position: absolute;
            bottom: 20px;
            left: 15px;
            display: flex;
            align-items: center;
            gap: 5px;
            color: white;
            font-size: 14px;
            z-index: 7;
            background: rgba(255, 255, 255, 0.2);
            padding: 3px 8px;
            border-radius: 15px;
        }

        .profile-img {
            width: 24px;
            height: 24px;
            transition: transform 0.3s ease;
        }

        .profile-views:hover .profile-img {
            transform: translateY(-5px);
        }

        .view-count {
            font-family: Roboto, Arial, sans-serif;
            font-weight: 400;
        }

        .view-tooltip {
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(0, 0, 0, 0.6);
            padding: 5px;
            border-radius: 5px;
            font-size: 1rem;
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            white-space: nowrap;
        }

        .profile-views:hover .view-tooltip {
            opacity: 1;
            animation: fadeIn 0.5s ease;
        }

        .playlist-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }

        .player-controls {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        #current-song {
            font-size: 14px;
            font-family: Roboto, Arial, sans-serif;
        }

        .progress-slider {
            -webkit-appearance: none;
            width: 100%;
            height: 4px;
            background: rgba(255, 255, 255, 0.3);
            outline: none;
            border-radius: 2px;
        }

        .progress-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 12px;
            height: 12px;
            background: white;
            border-radius: 50%;
            cursor: pointer;
        }

        .control-buttons {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .control-button {
            background: none;
            border: none;
            cursor: pointer;
        }

        .control-button:hover img {
            transform: translateY(-5px);
        }

        /* Mobile Anpassungen */
        @media (max-width: 600px) {
            .profile-wrapper {
                max-width: 360px;
                gap: 5px;
                transform: perspective(1000px) rotateX(var(--xv)) rotateY(var(--yv)) scale(0.9);
            }

            .profile-container {
                max-width: 360px;
            }

            .playlist-container {
                max-width: 360px;
            }

            /* Anpassung für den Startbildschirm auf kleinen Geräten */
            #start-text {
                font-size: 18px;
                padding: 0 20px;
            }

            /* Mobile Anpassung des Lautstärke-Controllers */
            .volume-control-container {
                width: 50px;
                height: 50px;
                top: 15px;
                left: 15px;
            }

            .volume-control-container:hover {
                width: 200px;
                padding-left: 50px;
            }

            .volume-control-container:hover .volume-icon-svg {
                margin-left: -38px;
            }

            .volume-icon-svg {
                width: 25px;
                height: 25px;
            }

            .volume-slider-inline {
                width: 80px;
            }
            .volume-percentage {
                font-size: 0.8rem;
                min-width: 30px;
            }
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Courier+New&display=swap" rel="stylesheet">
</head>
<body oncontextmenu="return false;" onkeydown="return disableDevTools(event);">
    <div class="custom-cursor"></div>

    <video class="background-video" autoplay loop muted playsinline webkit-playsinline>
        <source src="https://files.catbox.moe/10r4za.mp4" type="video/mp4">
    </video>

    <div class="tv-overlay"></div>

    <audio id="audio-player"></audio>

    <div class="volume-control-container" id="volume-control-container">
        <svg class="volume-icon-svg" id="volume-icon-svg" viewBox="0 0 24 24">
            <path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/>
        </svg>
        <div class="volume-slider-inline">
            <input type="range" id="volume-range" min="0" max="1" step="0.01" value="0.5" onclick="event.stopPropagation()">
        </div>
        <div class="volume-percentage" id="volume-percentage">50%</div>
    </div>
    <div id="start-screen">
        <div id="start-text">[Hey! Click To Enter]</div>
    </div>

    <div class="content" id="content">
        <div class="profile-wrapper" id="profile-wrapper">
            <div class="profile-container" id="profile-container">
                <div class="shop-button" id="shop-button" role="button" aria-label="Shop">
                    <img src="https://files.catbox.moe/yiv4td.gif" alt="Shop">
                </div>
                <div class="avatar-container">
                    <img src="https://files.catbox.moe/ju44qu.webp" alt="Avatar" class="avatar">
                </div>

                <div class="username">
                    ATMOO
                    <div class="uid">UID: 1</div>
                </div>

                <div class="badges-container">
                    <div class="badge" title="Owner" role="img" aria-label="Owner Badge">
                        <img src="https://files.catbox.moe/qe5c37.gif" alt="" class="badge-img">
                        <div class="badge-name">Owner of MGIII goats</div>
                    </div>
                </div>

                <p class="profile-description">
                    <span id="typing-text"></span>
                </p>

                <div class="line"></div>

                <div class="social-icons">
                    <div class="icon" role="link" aria-label="Social Media Icon">
                        <img src="https://files.catbox.moe/et1j9s.gif" alt="">
                    </div>
                    <div class="icon" onclick="window.open('https://discord.gg/yKpZdnx2');" role="link" aria-label="Discord Community">
                        <img src="https://files.catbox.moe/5vc0da.webp" alt="">
                        <div class="social-name">Discord Community</div>
                    </div>
                    <div class="icon" role="link" aria-label="Social Media Icon">
                        <img src="https://files.catbox.moe/et1j9s.gif" alt="">
                    </div>
                </div>

                <div class="profile-views" id="profile-views" role="status" aria-label="Profile Views">
                    <img src="https://files.catbox.moe/7oiee7.png" alt="Profile Views" class="profile-img">
                    <span class="view-count" id="view-count">24,343</span>
                    <div class="view-tooltip">Profile Views</div>
                </div>
            </div>

            <div class="playlist-container" id="playlist-container">
                <img src="https://files.catbox.moe/h2vzk5.gif" alt="Playlist Avatar" class="playlist-avatar">
                <div class="vertical-line"></div>
                <div class="player-controls">
                    <span id="current-song">Song 1</span>
                    <input type="range" min="0" max="100" value="0" class="progress-slider" id="progress-slider" aria-label="Song Progress">
                    <div class="control-buttons">
                        <button class="control-button" id="stop-play-button" role="button" aria-label="Play/Pause">
                            <img src="https://files.catbox.moe/q3s6ow.png" alt="Play/Pause" id="stop-play-icon">
                        </button>
                        <button class="control-button" id="next-button" role="button" aria-label="Next Song">
                            <img src="https://files.catbox.moe/z9776r.png" alt="Skip">
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

<script>
        // Funktion zur Erkennung von Touch-Geräten
        function isTouchDevice() {
            return ('ontouchstart' in window) ||
                   (navigator.maxTouchPoints > 0) ||
                   (navigator.msMaxTouchPoints > 0);
        }

        document.addEventListener('DOMContentLoaded', function() {
            try {
                // Deaktiviert Textauswahl (kann auf Mobilgeräten stören, aber beibehalten, falls gewünscht)
                document.addEventListener('selectstart', function(e) {
                    e.preventDefault();
                    return false;
                });

                // Deaktiviert das Kontextmenü (Rechtsklick)
                document.addEventListener('contextmenu', function(e) {
                    e.preventDefault();
                    return false;
                });

                // Deaktiviert Entwicklertools-Zugriff
                function disableDevTools(event) {
                    if (
                        event.keyCode === 123 || // F12
                        (event.ctrlKey && event.shiftKey && event.keyCode === 73) || // Ctrl+Shift+I (Inspektor)
                        (event.ctrlKey && event.shiftKey && event.keyCode === 74) || // Ctrl+Shift+J (Konsole)
                        (event.ctrlKey && event.keyCode === 85) // Ctrl+U (Quelltext anzeigen)
                    ) {
                        event.preventDefault();
                        return false;
                    }
                }

                document.addEventListener('keydown', disableDevTools);

                // Elemente aus dem DOM abrufen
                const volumeControlContainer = document.getElementById('volume-control-container'); // Neuer Container
                const volumeIconSvg = document.getElementById('volume-icon-svg'); // SVG Icon
                const volumeRange = document.getElementById('volume-range'); // Neuer Slider
                const volumePercentage = document.getElementById('volume-percentage'); // Neue Prozentanzeige
                const startScreen = document.getElementById('start-screen');
                const content = document.getElementById('content');
                const shopButton = document.getElementById('shop-button');
                const profileWrapper = document.getElementById('profile-wrapper');
                const audioPlayer = document.getElementById('audio-player');
                const stopPlayButton = document.getElementById('stop-play-button');
                const stopPlayIcon = document.getElementById('stop-play-icon');
                const nextButton = document.getElementById('next-button');
                const currentSongElement = document.getElementById('current-song');
                const progressSlider = document.getElementById('progress-slider');
                const backgroundVideo = document.querySelector('.background-video');

                // Variablen für Lautstärke und Mute-Status
                let isMuted = false;
                let previousVolume = 0.5; // Initialwert, 0.0 - 1.0 für AudioPlayer

                // Überprüfen, ob alle benötigten Elemente gefunden wurden
                if (!volumeControlContainer || !volumeIconSvg || !volumeRange || !volumePercentage || !startScreen || !content || !shopButton || !profileWrapper || !audioPlayer || !stopPlayButton || !stopPlayIcon || !nextButton || !currentSongElement || !progressSlider || !backgroundVideo) {
                    console.error('One or more elements not found');
                    return;
                }

                // Initialisierung der Audio-Player-Lautstärke und Slider-Wert
                audioPlayer.volume = previousVolume;
                volumeRange.value = previousVolume; // Slider-Wert ist bereits 0.0-1.0
                volumePercentage.textContent = Math.round(previousVolume * 100) + '%';


                // --- Benutzerdefinierter Cursor JavaScript ---
                const customCursor = document.querySelector('.custom-cursor');

                if (isTouchDevice()) {
                    document.body.classList.add('touch-device');
                    customCursor.style.display = 'none'; // Verstecke den Custom Cursor auf Touch-Geräten
                } else {
                    document.body.classList.remove('touch-device');
                    customCursor.style.display = 'block'; // Zeige den Custom Cursor auf Nicht-Touch-Geräten
                    document.addEventListener('mousemove', (e) => {
                        customCursor.style.left = `${e.clientX}px`;
                        customCursor.style.top = `${e.clientY}px`;
                    });

                    document.addEventListener('mouseleave', () => {
                        customCursor.style.opacity = '0';
                    });

                    document.addEventListener('mouseenter', () => {
                        customCursor.style.opacity = '1';
                    });
                }
                // --- Ende Benutzerdefinierter Cursor JavaScript ---


                // Event-Listener für das Overlay (Beim Klick auf das Overlay startet die Musik und das Profil wird sichtbar)
                startScreen.addEventListener('click', function() {
                    this.classList.add('hidden');

                    // Mache den Lautstärke-Controller sichtbar
                    volumeControlContainer.classList.add('visible');

                    if (backgroundVideo.paused) {
                        backgroundVideo.play().catch(error => {
                            console.log('Background video play failed:', error);
                        });
                    }

                    content.style.display = 'block';
                    shopButton.style.display = 'flex';
                    loadSong(currentSongIndex);
                    audioPlayer.play().catch(error => console.log('Audio play failed:', error));
                    stopPlayIcon.src = 'https://files.catbox.moe/7iitej.png';
                });

                // Funktion zum Umschalten der Lautstärke (Mute/Unmute)
                function toggleVolume(event) {
                    event.stopPropagation();
                    if (!audioPlayer) return;

                    isMuted = !isMuted;
                    if (isMuted) {
                        if (audioPlayer.volume > 0) {
                            previousVolume = audioPlayer.volume;
                        }
                        audioPlayer.muted = true;
                        audioPlayer.volume = 0;
                        volumeControlContainer.classList.add('muted');
                        volumeIconSvg.innerHTML = '<path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/>';
                        volumeRange.value = 0;
                        volumePercentage.textContent = '0%';
                    } else {
                        audioPlayer.muted = false;
                        audioPlayer.volume = previousVolume;
                        volumeControlContainer.classList.remove('muted');
                        volumeIconSvg.innerHTML = '<path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/>';
                        volumeRange.value = previousVolume;
                        volumePercentage.textContent = Math.round(previousVolume * 100) + '%';
                    }
                }
                volumeIconSvg.onclick = toggleVolume;


                // Event-Listener für den Lautstärke-Slider
                volumeRange.addEventListener('input', function(e) {
                    e.stopPropagation();
                    const volume = parseFloat(this.value);
                    audioPlayer.volume = volume;
                    previousVolume = volume;

                    if (volume === 0) {
                        audioPlayer.muted = true;
                        isMuted = true;
                        volumeControlContainer.classList.add('muted');
                        volumeIconSvg.innerHTML = '<path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/>';
                    } else {
                        audioPlayer.muted = false;
                        isMuted = false;
                        volumeControlContainer.classList.remove('muted');
                        volumeIconSvg.innerHTML = '<path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/>';
                    }
                    volumePercentage.textContent = Math.round(volume * 100) + '%';
                });


                // Phrasen für den Tippeffekt
                const phrases = ["Join My Dc And Be Your Own Owner"];
                const typingTextElement = document.getElementById('typing-text');
                let currentPhraseIndex = 0;
                let currentCharIndex = 0;
                let isDeleting = false;

                function type() {
                    const currentPhrase = phrases[currentPhraseIndex];
                    const typingSpeed = 120;
                    const deletingSpeed = 60;
                    const pauseTime = 2000;

                    if (!isDeleting && currentCharIndex <= currentPhrase.length) {
                        typingTextElement.textContent = currentPhrase.slice(0, currentCharIndex);
                        currentCharIndex++;
                        setTimeout(type, typingSpeed);
                    } else if (isDeleting && currentCharIndex > 0) {
                        typingTextElement.textContent = currentPhrase.slice(0, currentCharIndex - 1);
                        currentCharIndex--;
                        setTimeout(type, deletingSpeed);
                    } else if (!isDeleting && currentCharIndex > currentPhrase.length) {
                        setTimeout(() => {
                            isDeleting = true;
                            type();
                        }, pauseTime);
                    } else if (isDeleting && currentCharIndex === 0) {
                        isDeleting = false;
                        currentPhraseIndex = (currentPhraseIndex + 1) % phrases.length;
                        setTimeout(type, 500);
                    }
                }

                setTimeout(type, 500);

                // --- 3D-Effekt für das Profil-Wrapper (JS-Steuerung REAKTIVIERT, aber nur auf Nicht-Touch-Geräten) ---
                profileWrapper.addEventListener('mousemove', function(e) {
                    if (!isTouchDevice()) {
                        const rect = this.getBoundingClientRect();
                        const sensitivity = 42;
                        const x = e.clientX - rect.left;
                        const y = e.clientY - rect.top;
                        const rotateX = ((y / rect.height) - 0.5) * sensitivity;
                        const rotateY = ((x / rect.width) - 0.5) * -sensitivity;
                        this.style.setProperty('--xv', `${rotateX}deg`);
                        this.style.setProperty('--yv', `${rotateY}deg`);
                    }
                });

                profileWrapper.addEventListener('mouseleave', function() {
                    if (!isTouchDevice()) {
                        setTimeout(() => {
                            this.style.setProperty('--xv', `0deg`);
                            this.style.setProperty('--yv', `0deg`);
                        }, 150);
                    }
                });
                // --- Ende 3D-Effekt ---


                // Event-Listener für den Shop-Button
                shopButton.addEventListener('click', function() {
                    window.open('https://discord.gg/yKpZdnx2');
                });

                const playlist = [
                    { src: 'https://files.catbox.moe/wn7yrq.mp3', title: 'Song 1' },
                    { src: 'https://files.catbox.moe/9jdau3.mp3', title: 'Song 2' },
                    { src: 'https://files.catbox.moe/aqxw1n.MP3', title: 'Song 3' }
                ];
                let currentSongIndex = 0;

                function loadSong(index) {
                    audioPlayer.src = playlist[index].src;
                    currentSongElement.textContent = playlist[index].title;
                    progressSlider.value = 0;
                }

                loadSong(currentSongIndex);

                stopPlayButton.addEventListener('click', function() {
                    if (audioPlayer.paused) {
                        audioPlayer.play().catch(error => console.log('Audio play failed:', error));
                        stopPlayIcon.src = 'https://files.catbox.moe/7iitej.png';
                    } else {
                        audioPlayer.pause();
                        stopPlayIcon.src = 'https://files.catbox.moe/q3s6ow.png';
                    }
                });

                nextButton.addEventListener('click', function() {
                    currentSongIndex = (currentSongIndex + 1) % playlist.length;
                    loadSong(currentSongIndex);
                    audioPlayer.play().catch(error => console.log('Audio play failed:', error));
                    stopPlayIcon.src = 'https://files.catbox.moe/7iitej.png';
                });

                audioPlayer.addEventListener('timeupdate', function() {
                    if (!isNaN(audioPlayer.duration)) {
                        const progress = (audioPlayer.currentTime / audioPlayer.duration) * 100;
                        progressSlider.value = progress;
                    }
                });

                progressSlider.addEventListener('input', function() {
                    const time = (this.value / 100) * audioPlayer.duration;
                    audioPlayer.currentTime = time;
                });

                audioPlayer.addEventListener('ended', function() {
                    currentSongIndex = (currentSongIndex + 1) % playlist.length;
                    loadSong(currentSongIndex);
                    audioPlayer.play().catch(error => console.log('Audio play failed:', error));
                    stopPlayIcon.src = 'https://files.catbox.moe/7iitej.png';
                });

                async function updateProfileViews() {
                    try {
                        const ipResponse = await fetch('https://api.ipify.org?format=json');
                        const { ip } = await ipResponse.json();

                        const response = await fetch('http://localhost:3000/increment-view', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ ip: ip, profileId: 'jaqliv' })
                        });

                        const data = await response.json();
                        const viewCountElement = document.getElementById('view-count');
                        if (data.views) {
                            viewCountElement.textContent = data.views.toLocaleString();
                        }
                    } catch (error) {
                        console.error('Fehler beim Aktualisieren der Profilaufrufe:', error);
                    }
                }

                updateProfileViews();
            } catch (error) {
                console.error('Script error:', error);
            }
        });
    </script>
</body>
</html>
